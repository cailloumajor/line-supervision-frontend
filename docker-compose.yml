# Configuration common to development and production
version: "2.3"

services:
  centrifugo:
    build:
      context: ./centrifugo
    command: centrifugo --config /usr/local/etc/centrifugo.toml
    environment:
      - CENTRIFUGO_PROXY_SUBSCRIBE_ENDPOINT=http://opcua-bridge:8008/centrifugo/subscribe
      # Following environment variables will be obtained from `.env` file
      - CENTRIFUGO_API_KEY
    labels:
      dozzle.enable: "true"
      traefik.enable: "true"
      traefik.http.middlewares.centrifugo-stripprefix.stripprefix.prefixes: "/centrifugo"
      traefik.http.middlewares.centrifugo-stripprefix.stripprefix.forceslash: "false"
      traefik.http.routers.centrifugo.middlewares: "centrifugo-stripprefix@docker"
      traefik.http.routers.centrifugo.rule: "PathPrefix(`/centrifugo/`)"
    networks:
      - net-private
    tty: true
    volumes:
      - ./centrifugo/config.toml:/usr/local/etc/centrifugo.toml:ro

  grafana:
    image: grafana/grafana-oss:8.2.4
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_ENABLE_GZIP=true
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - INFLUXDB_URL=http://influxdb:8086
      # Following environment variables will be obtained from `.env` file
      - INFLUXDB_ORG
      - INFLUXDB_BUCKET
      - INFLUXDB_READ_TOKEN
    labels:
      dozzle.enable: "true"
      traefik.enable: "true"
      traefik.http.routers.grafana.rule: "PathPrefix(`/grafana/`) || Path(`/grafana`)"
    networks:
      - net-private
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/influxdb.yaml:/etc/grafana/provisioning/datasources/influxdb.yaml

  influxdb:
    image: influxdb:2.7.1
    environment:
      - INFLUXD_REPORTING_DISABLED=true
    healthcheck:
      test: influx ping || exit 1
      interval: 20s
      start_period: 1m
    labels:
      dozzle.enable: "true"
      traefik.enable: "true"
      traefik.http.middlewares.influxdb-stripprefix.stripprefix.prefixes: "/influxdb"
      traefik.http.middlewares.influxdb-stripprefix.stripprefix.forceslash: "false"
      traefik.http.routers.influxdb.middlewares: "influxdb-stripprefix@docker"
      traefik.http.routers.influxdb.rule: "PathPrefix(`/influxdb/`)"
    networks:
      - net-private
    tty: true
    volumes:
      - influxdb_data:/var/lib/influxdb2

  log-viewer:
    image: amir20/dozzle:v3.9.0
    depends_on:
      - docker-socket-proxy
    environment:
      - DOCKER_HOST=tcp://docker-socket-proxy:2375
      - DOZZLE_BASE=/logs
      - DOZZLE_FILTER=label=dozzle.enable=true
    expose:
      - "8080"
    labels:
      traefik.enable: "true"
      traefik.http.routers.logging.rule: "PathPrefix(`/logs/`) || Path(`/logs`)"
    networks:
      - net-private
    user: 2000:2000

  opcua-bridge:
    image: ghcr.io/cailloumajor/opcua-webhmi-bridge:1.0.2
    environment:
      - INFLUXDB_BASE_URL=http://influxdb:8086
      - CENTRIFUGO_API_URL=http://centrifugo:8000/api
      # Following environment variables will be obtained from `.env` file
      - INFLUXDB_ORG
      - INFLUXDB_BUCKET
      - INFLUXDB_WRITE_TOKEN
      - CENTRIFUGO_API_KEY
      - OPC_SERVER_URL
      - OPC_MONITOR_NODES
      - OPC_RECORD_NODES
    labels:
      dozzle.enable: "true"
    networks:
      - net-private
    volumes:
      - ./certificates/cert.der:/tmp/certs/cert.der
      - ./certificates/key.pem:/tmp/certs/key.pem

  api-service:
    image: ghcr.io/cailloumajor/line-supervision-api-service:1.1.1
    environment:
      - TZ=Europe/Paris
      - UI_CUSTOMIZATION_FILE=/app/config_data/customization.toml
      - LOGO_FILE=/app/config_data/logo.png
      - INFLUXDB_BASE_URL=http://influxdb:8086
      # Following environment variables will be obtained from `.env` file
      - INFLUXDB_ORG
      - INFLUXDB_BUCKET
      - INFLUXDB_READ_TOKEN
    labels:
      dozzle.enable: "true"
      traefik.enable: "true"
      traefik.http.middlewares.api-service-stripprefix.stripprefix.prefixes: "/api"
      traefik.http.middlewares.api-service-stripprefix.stripprefix.forceslash: "false"
      traefik.http.routers.api-service.middlewares: "api-service-stripprefix@docker"
      traefik.http.routers.api-service.rule: "PathPrefix(`/api/`) || Path(`/api`)"
    networks:
      - net-private
    volumes:
      - ./ui-customization.toml:/app/config_data/customization.toml:ro
      - ./logo.png:/app/config_data/logo.png:ro

  web:
    build:
      context: ./web
    labels:
      dozzle.enable: "true"
      traefik.enable: "true"
      traefik.http.routers.web.rule: "Path(`/`, `/{file:[a-zA-Z0-9_.-]+}`)
        || PathPrefix(`/css/`, `/fonts/`, `/img/`, `/js/`, `/sockjs-node/`)"
      traefik.http.routers.web.priority: 1
      traefik.http.services.web.loadbalancer.server.port: 8080
    networks:
      - net-private

  docker-socket-proxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:0.1.1
    environment:
      - CONTAINERS=1
    labels:
      dozzle.enable: "true"
    networks:
      - net-private
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  reverse-proxy:
    image: traefik:v2.5.4
    depends_on:
      - docker-socket-proxy
    labels:
      dozzle.enable: "true"
    networks:
      - default
      - net-private
    ports:
      - "80:8000"
    tty: true
    user: 2000:2000
    volumes:
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml:ro

networks:
  net-private:

volumes:
  grafana-data:
  influxdb_data:
